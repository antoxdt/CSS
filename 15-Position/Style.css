/* position

Es la propieda que nos permite posicionar los elementos de un html

1. Fijo del rendirizado: Los elementos en html se dibujan de izquierda a derecha y de arriba hacia abajo

2. Espacio reservado: Es un espacio que tiene un elemento

3. Elemento posicionado: Es cuando su propiedad "position" tienen un valor distinto a "static" que es el valor por default.

4. Stacking context: Contexto de apilamiento. Es el orden en el que se superpone o apilan, los elementos en el html

Al posicionar un elemento se habilitan 5 propiedades que podemos usar paa mover el elemento en 3 ejes (x,y,z)

top -> Movera el elemento desde la parte superior.

rigth -> Movera el elemento desde la parte derecha

button -> Movera el elemento desde la parte inferior

left -> Movera el elemento desde la parte izquierda

* Los elementos tienen sus puntos de origen (0,0) en la esquina superior izquierda 
* La distancia a moverse se indica en px y acepta valores negativos
* Si a un elemento le declaramos la propiedad top, button deja de funcionar
* Si a un elemento le declaramos la propiedad left, rigth deja de funcionar

z-index -> nos permite mover el elemento en el contexto de apilamiento, (eje z). Recibe valores en numeros o indicessin. Puede recibir valores negativos 

Los posibles valores que position recibe son:

static-> Es el valor por default de los elementos con este valor el elemento no esta posicionado y no podemos moverlo 

relative-> El elemento mantiene su posicion y medidas en el flujo del renderizado. Mantendra su espacio reservado si lo movemos usara su contenedor como referencia.

absolute-> El elemento perdera sus medidas y su espacio reservado. Si movemos el elemento lo hara en funcion de su contenedor posicionado
fixed-> El elemento perdera sus medidas yy su espacio reservado si lo movemos usara el elemento html como referencia y quedara fijo en esa posicion aunque hagamos scroll

sticky -> Es una mezcla de "Relative" y "Fixed" con este valor las propiedades top, rigth, botton, 
 */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.body {
  font-family: sans-serif;
  color: dimgrey;
  background-color: bisque;

}

.box {
  width: 100px;
  height: 100px;
}

.box-1 {
  position: relative;
  right: -20px;
  bottom: -20px;
  z-index: 1;
  background-color: crimson;
}

.box-2 {
  left: 50px;
  top: -25px;
  position: relative;
  background-color: deeppink;
}

.container {
  margin: auto;
  width: 300px;
  height: 300px;
  background-color: goldenrod;
}

.box-3 {
  position: absolute;
  top: 100px;
  left: 100px;
  right: 0;
  bottom: 0;
  z-index: 15;
  background-color:orangered;
}

.box-4{
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 0;
  width: 100%;
  background-color: green;
}














.nav {
  position: fixed;
  width: 100%;
  text-align: center;
  background-color: crimson;
}

.nav a {
display: inline-block;
padding: 12px 8px;
text-decoration: none;
color: ghostwhite;
}

.button:hover {
position: fixed;
right: 20px;
bottom: 20px;

width: 100px;
height: 100px;
font-size: 48px;
text-align: center;
padding-top: 10px;
background-color: gold;
border-radius: 50%;
cursor: pointer;
}

main {
  width: 100px;
  max-width: 960PX;
  margin: 0, auto;
  margin: top 50px ;
  background-color:bisque;

}

section h2{
position: sticky; 
padding: 0, 34px;
background-color: antiquewhite;
}

section p {
  
  font-size: 34px;
  
}